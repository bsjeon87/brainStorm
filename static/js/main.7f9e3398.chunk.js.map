{"version":3,"sources":["services/ideaService.js","services/loginManager.js","firebase/firebase.js","components/loginPopup.jsx","components/navBar.jsx","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/ideasTable.jsx","components/common/pagination.jsx","components/common/listGroup.jsx","components/common/searchBox.jsx","utils/paginate.js","components/ideas.jsx","components/materialsTable.jsx","components/materials.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/common/hashTags.jsx","components/ideaForm.jsx","components/materialForm.jsx","components/home.jsx","App.js","serviceWorker.js","index.js"],"names":["user","loginStatus","onHandler","this","handler","login","userUID","uid","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","login_popup_state","app","initializeApp","firestore","provider","auth","GoogleAuthProvider","addScope","userID","signInWithPopup","then","result","console","log","credential","accessToken","login_state","LoginHandler","setLogin","catch","Err","code","alert","paths","fire_ref","i","parseInt","collection","doc","docRef","getCollection","get","docs","forEach","id","_id","data","push","exists","obj","add","set","doc_ref","delete","isArray","arrayName","isRemoving","arrElement","firebase","FieldValue","arrayUnion","arrayRemove","update","error","ideas","materials","getCategories","objs","categories_from_objs","length","map","index","name","category","getIdea","ideaId","ideaArr","filter","getMaterial","materialId","matarialArr","m","getIdeas","getMaterials","addNewMaterial","material","a","createDocumentWithoutName","material_id","updateMaterial","new_material","keyword","removeMaterial","removeIdea","idea","related_material","idea_id","updateIdeaWithMaterials","new_idea","undefined","material_ideas","title","content","addNewIdeaWithMaterials","materialsParmeter","loadingData","userArg","loadAllDocuments","makesUser","userdata","username","displayName","email","createDocument","LoginPopup","LoginManager","setLoginHandler","handleLogin","bind","loadDocuments","gotData","props","history","replace","popupLogin","Component","NavBar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Like","classes","liked","onClick","style","cursor","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","columns","key","label","TableBody","renderCell","item","_","createKey","Table","IdeasTable","onLike","onDelete","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","range","page","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","SearchBox","value","onChange","placeholder","e","currentTarget","paginate","pageNumber","startIndex","slice","take","Ideas","state","searchQuery","selectedCategory","handleDelete","setState","handleSort","handleLike","indexOf","handlePageChange","handleCatgorySelect","handleSearch","query","getPagedData","all_ideas","filtered","toLowerCase","startsWith","orderBy","totalCount","categories_from_idea","category_filter","c","includes","marginBottom","MaterialsTable","Materials","all_materials","categories_from_material","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","handleSubmit","preventDefault","doSubmit","handleChange","errorMessage","row","rows","disabled","Tags","tags","onClose","data-name","tag","IdeaForm","pickedMaterials","string","required","handleMaterialTagClick","find","filtered_tags","t","handlePickmaterial","material_index","getRandomInt","new_materials","min","max","floor","random","ideaid","match","params","mapToViewModel","material_tags","align","onSubmit","renderInput","renderTextArea","renderButton","MaterialForm","Home","isLogin","Fragment","component","App","from","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f9e3398.chunk.js","sourcesContent":["import firebase from \"../firebase/firebase\";\r\n\r\n//*usersDB\r\n//_authID (doc id)  -- auto make\r\n//username\r\n//email\r\n\r\n//*ideas DB\r\n//uid(doc id)    -- auto make\r\n//** collection for each idea\r\n// idea id   -- auto make\r\n// idea category\r\n// idea title\r\n// idea contents\r\n// related materials list(id )\r\n\r\n//*materials DB\r\n//uid(doc id) -- auto make\r\n//**collection for each material\r\n// material id -- auto make\r\n// material category\r\n// material keyworkd\r\n// related id list( id )\r\n\r\nlet ideas = [];\r\nlet materials = [];\r\nlet user;\r\n\r\nexport function getCategories(objs) {\r\n  let categories_from_objs = [];\r\n  if (objs.length === 0) return categories_from_objs;\r\n\r\n  categories_from_objs = objs.map((obj, index) => {\r\n    return { _id: index + 1, name: obj.category };\r\n  });\r\n  return categories_from_objs;\r\n}\r\nexport function getIdea(ideaId) {\r\n  const ideaArr = ideas.filter((i) => i._id === ideaId);\r\n  console.log(\"find idea\", ideaArr);\r\n  return ideaArr[0];\r\n}\r\nexport function getMaterial(materialId) {\r\n  const matarialArr = materials.filter((m) => m._id === materialId);\r\n  console.log(\"find matarial\", matarialArr);\r\n  return matarialArr[0];\r\n}\r\n\r\nexport function getIdeas() {\r\n  return ideas;\r\n}\r\nexport function getMaterials() {\r\n  return materials;\r\n}\r\n\r\nexport async function addNewMaterial(material) {\r\n  materials.push(material);\r\n\r\n  const material_id = await firebase.createDocumentWithoutName(\r\n    [\"materials\", user.uid, \"material\"],\r\n    material\r\n  );\r\n  if (material_id !== null) {\r\n    material._id = material_id;\r\n  } else {\r\n    //TODO ::FAIL\r\n    return;\r\n  }\r\n}\r\nexport async function updateMaterial(new_material) {\r\n  let material = getMaterial(new_material._id);\r\n  //material update\r\n  const result = await firebase.update(\r\n    [\"materials\", user.uid, \"material\", new_material._id],\r\n    {\r\n      category: new_material.category,\r\n      keyword: new_material.keyword,\r\n    }\r\n  );\r\n\r\n  material.category = new_material.category;\r\n  material.keyword = new_material.keyword;\r\n}\r\nexport async function removeMaterial(material) {\r\n  console.log(\"remove Material\", material);\r\n  materials = materials.filter((m) => m._id !== material._id);\r\n  await firebase.delete([\"materials\", user.uid, \"material\", material._id]);\r\n}\r\nexport async function removeIdea(idea) {\r\n  console.log(\"remove idea\", idea);\r\n  console.log(\"remove all materials\", materials);\r\n  ideas = ideas.filter((i) => idea._id !== i._id);\r\n  var related_material = materials.filter((m) => {\r\n    console.log(\"for material\", m);\r\n    for (var index in idea.materials) {\r\n      console.log(\"for id\", idea.materials[index].material_id);\r\n      if (m._id === idea.materials[index].material_id) return true;\r\n    }\r\n    return false;\r\n  });\r\n  console.log(\"remove related material\", related_material);\r\n  related_material.map(async (m) => {\r\n    let result = await firebase.update(\r\n      [\"materials\", user.uid, \"material\", m._id],\r\n      {\r\n        idea_id: idea._id,\r\n      },\r\n      true,\r\n      \"ideas\",\r\n      true\r\n    );\r\n    if (result === true) {\r\n      console.log(\"update material \");\r\n    }\r\n    m.ideas = m.ideas.filter((i) => {\r\n      return i.idea_id !== idea._id;\r\n    });\r\n  });\r\n\r\n  await firebase.delete([\"ideas\", user.uid, \"idea\", idea._id]);\r\n}\r\nexport async function updateIdeaWithMaterials(new_idea) {\r\n  // 0. 기존 idea찾기\r\n  // 1. 기존 idea의 material과 차이점 찾기.\r\n  // 1-1. 없어진 material업데이트.\r\n  // 1-2. 새로생긴 material 업데이트.\r\n  // 2. idea doc 전체 업데이트\r\n\r\n  const idea = getIdea(new_idea._id);\r\n  if (!idea) return;\r\n\r\n  console.log(\"update idea1\", idea);\r\n  console.log(\"update new idea1\", new_idea);\r\n  //기존에는 있었으나 새로운 아이디에는 없어짐.\r\n  const diff_for_removingMaterial = idea.materials.filter((m) => {\r\n    for (var index in new_idea.materials) {\r\n      if (m.material_id === new_idea.materials[index].material_id) return false;\r\n    }\r\n    return true;\r\n  });\r\n  diff_for_removingMaterial.map(async (m) => {\r\n    await firebase.update(\r\n      [\"materials\", user.uid, \"material\", m.material_id],\r\n      {\r\n        idea_id: idea._id,\r\n      },\r\n      true,\r\n      \"ideas\",\r\n      true\r\n    );\r\n    let material = getMaterial(m.material_id);\r\n    if (material.ideas === null || material.ideas === undefined)\r\n      material.ideas = [];\r\n    const material_ideas = material.ideas.filter((i) => idea._id !== i.idea_id);\r\n    material.ideas = material_ideas;\r\n  });\r\n\r\n  //기존에는 없었으나 새로운 아이디어에는 새로 생김.\r\n  const diff_for_addingMaterial = new_idea.materials.filter((m) => {\r\n    for (var index in idea.materials) {\r\n      if (m.material_id === idea.materials[index].material_id) return false;\r\n    }\r\n    return true;\r\n  });\r\n  diff_for_addingMaterial.map(async (m) => {\r\n    await firebase.update(\r\n      [\"materials\", user.uid, \"material\", m.material_id],\r\n      {\r\n        idea_id: idea._id,\r\n      },\r\n      true,\r\n      \"ideas\",\r\n      false\r\n    );\r\n\r\n    let material = getMaterial(m.material_id);\r\n    if (material.ideas === null || material.ideas === undefined)\r\n      material.ideas = [];\r\n    material.ideas.push(idea._id);\r\n  });\r\n\r\n  console.log(\"update idea\");\r\n  //idea update\r\n  const result = await firebase.update(\r\n    [\"ideas\", user.uid, \"idea\", new_idea._id],\r\n\r\n    {\r\n      category: new_idea.category,\r\n      title: new_idea.title,\r\n      content: new_idea.content,\r\n      materials: new_idea.materials,\r\n    }\r\n  );\r\n  if (result === true) {\r\n    console.log(\"update idea \");\r\n  }\r\n\r\n  idea.category = new_idea.category;\r\n  idea.title = new_idea.title;\r\n  idea.content = new_idea.content;\r\n  idea.materials = new_idea.materials;\r\n}\r\nexport async function addNewIdeaWithMaterials(idea, materialsParmeter) {\r\n  //ideas\r\n  ideas.push(idea);\r\n\r\n  const idea_id = await firebase.createDocumentWithoutName(\r\n    [\"ideas\", user.uid, \"idea\"],\r\n    idea\r\n  );\r\n  if (idea_id !== null) {\r\n    idea._id = idea_id;\r\n    console.log(\"create user id\");\r\n  } else {\r\n    //TODO ::FAIL\r\n    return;\r\n  }\r\n\r\n  materialsParmeter.map(async (m) => {\r\n    let result = await firebase.update(\r\n      [\"materials\", user.uid, \"material\", m._id],\r\n      {\r\n        idea_id: idea._id,\r\n      },\r\n      true,\r\n      \"ideas\"\r\n    );\r\n    if (result === true) {\r\n      console.log(\"update material \");\r\n    }\r\n  });\r\n}\r\n\r\nexport async function loadingData(userArg) {\r\n  user = userArg;\r\n  ideas = await firebase.loadAllDocuments([\"ideas\", user.uid, \"idea\"]);\r\n  materials = await firebase.loadAllDocuments([\r\n    \"materials\",\r\n    user.uid,\r\n    \"material\",\r\n  ]);\r\n\r\n  console.log(\"ideas\", ideas);\r\n  console.log(\"materials\", materials);\r\n}\r\nexport async function makesUser(userArg) {\r\n  user = userArg;\r\n  console.log(userArg);\r\n  const userdata = { username: user.displayName, email: user.email };\r\n  console.log(\"user datalog\", userdata);\r\n  if ((await firebase.createDocument([\"users\", user.uid], userdata)) === true)\r\n    console.log(\"create new user info\");\r\n}\r\nexport async function makesFakeData(userArg) {\r\n  user = userArg;\r\n  console.log(userArg);\r\n  const usersDB = [{ username: \"test_user\", email: \"bs.jeon@gmail.com\" }];\r\n  const ideasDB = [\r\n    {\r\n      category: \"technology\",\r\n      title: \"brain1\",\r\n      content: \" brain storm way using it\",\r\n    },\r\n    {\r\n      category: \"technology\",\r\n      title: \"brain2\",\r\n      content: \" brain storm way using it22\",\r\n    },\r\n  ];\r\n  const materialsDB = [\r\n    { category: \"it\", keyword: \"idea\" },\r\n    { category: \"network\", keyword: \"nfc\" },\r\n  ];\r\n  if ((await firebase.createDocument([\"users\", user.uid], usersDB[0])) === true)\r\n    console.log(\"create new user info\");\r\n  //ideas\r\n  for (var index in ideasDB) {\r\n    const idea_id = await firebase.createDocumentWithoutName(\r\n      [\"ideas\", user.uid, \"idea\"],\r\n      ideasDB[index]\r\n    );\r\n    if (idea_id !== null) {\r\n      ideasDB[index]._id = idea_id;\r\n      console.log(\"create user id\");\r\n    }\r\n  }\r\n  //materials\r\n  for (index in materialsDB) {\r\n    const material_id = await firebase.createDocumentWithoutName(\r\n      [\"materials\", user.uid, \"material\"],\r\n      materialsDB[index]\r\n    );\r\n    if (material_id !== null) {\r\n      materialsDB[index]._id = material_id;\r\n      console.log(\"create material id\");\r\n    }\r\n  }\r\n  //for related\r\n  for (index in ideasDB) {\r\n    const result = await firebase.update(\r\n      [\"ideas\", user.uid, \"idea\", ideasDB[index]._id],\r\n\r\n      {\r\n        materials: [\r\n          {\r\n            material_id: materialsDB[index]._id,\r\n          },\r\n        ],\r\n      }\r\n    );\r\n    if (result === true) {\r\n      console.log(\"update idea \");\r\n    }\r\n  }\r\n  //material\r\n  for (index in materialsDB) {\r\n    const result = await firebase.update(\r\n      [\"materials\", user.uid, \"material\", materialsDB[index]._id],\r\n\r\n      {\r\n        ideas: [\r\n          {\r\n            idea_id: ideasDB[index]._id,\r\n          },\r\n        ],\r\n      }\r\n    );\r\n    if (result === true) {\r\n      console.log(\"update material \");\r\n    }\r\n  }\r\n\r\n  //test for array element update( add )\r\n  /* await firebase.update(\r\n    [\"materials\", user.uid, \"material\", materialsDB[0]._id],\r\n    {\r\n      idea_id: 6,\r\n      idea_title: \"test\",\r\n    },\r\n    true,\r\n    \"ideas\"\r\n  ); */\r\n}\r\n\r\nexport function getUserInfo(authInfo) {\r\n  //auth info에 대한 ID가 있으면 로딩/ 없으면 생성\r\n}\r\n","class LoginManager {\r\n  loginStatus = false;\r\n\r\n  setLoginHandler(onHandler) {\r\n    this.handler = onHandler;\r\n  }\r\n  setLogin(login, user) {\r\n    this.userUID = user.uid;\r\n    this.loginStatus = login;\r\n    this.handler(login, user);\r\n  }\r\n  isLogin() {\r\n    return this.loginStatus;\r\n  }\r\n}\r\n\r\nexport default new LoginManager();\r\n","import app from \"firebase/app\";\nimport * as firebase from \"firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport LoginHandler from \"../services/loginManager\";\n\n//fire base의 보안 추가(firebase site에서 적용) 시 login을 해야함\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAL5mUtRed98tWopw9TyAJslVZja5cOwQE\",\n  authDomain: \"brainstorm-75309.firebaseapp.com\",\n  databaseURL: \"https://brainstorm-75309.firebaseio.com\",\n  projectId: \"brainstorm-75309\",\n  storageBucket: \"brainstorm-75309.appspot.com\",\n  messagingSenderId: \"430681668546\",\n  appId: \"1:430681668546:web:80e6beccf5494e9e4ab45b\",\n  measurementId: \"G-PB72EJCN9K\",\n};\n\nclass Firebase {\n  login_popup_state = false;\n\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    this.firestore = app.firestore();\n    //this.auth = app.auth();\n    //  this.auth.signInWithEmailAndPassword()\n  }\n  /*\n  doSignInWithEmailAndPassword(email, password) {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  }\n*/\n  popupLogin() {\n    if (this.login_popup_state) return; //already popup\n    this.provider = new app.auth.GoogleAuthProvider();\n    this.provider.addScope(\"profile\");\n    this.provider.addScope(\"email\");\n    this.userID = 0;\n\n    app\n      .auth()\n      .signInWithPopup(this.provider)\n      .then((result) => {\n        console.log(\"dd\", result);\n        // This gives you a Google Access Token.\n        var token = result.credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        console.log(\"uid\", user.uid);\n        this.userID = user.uid;\n        this.login_state = true;\n        LoginHandler.setLogin(true, result.user);\n        this.login_popup_state = true;\n      })\n      .catch((Err) => {\n        if (Err.code === \"auth/cancelled-popup-request\") {\n          console.log(\"err2\", Err);\n          return;\n        }\n        console.log(\"err\", Err);\n        alert(\"failed to login, need to login\");\n      });\n  }\n\n  getCollection(paths) {\n    console.log(\"create path\", paths);\n    var fire_ref = null;\n    for (var i in paths) {\n      console.log(\"search path\", paths[i], i);\n      if (parseInt(i) === 0) {\n        fire_ref = this.firestore.collection(paths[0]);\n      } else if (i % 2 !== 0) {\n        fire_ref = fire_ref.doc(paths[i]);\n      } else {\n        fire_ref = fire_ref.collection(paths[i]);\n      }\n    }\n    return fire_ref;\n  }\n  async loadAllDocuments(paths) {\n    var docRef = this.getCollection(paths);\n    var result = [];\n    try {\n      const ret_docs = await docRef.get();\n\n      ret_docs.docs.forEach((doc) => {\n        console.log(\"doc : \", doc, doc.id, doc._id);\n        let data = doc.data();\n        data._id = doc.id;\n        result.push(data);\n      });\n    } catch (err) {\n      console.log(\"Error getting document:\", err);\n    }\n    return result;\n  }\n  async loadDocuments(paths) {\n    var docRef = this.getCollection(paths);\n\n    try {\n      const doc = await docRef.get();\n\n      if (doc.exists) {\n        console.log(\"Document data:\", doc.data());\n        return doc.data();\n      } else console.log(\"No such document!\");\n    } catch (err) {\n      console.log(\"Error getting document:\", err);\n    }\n    return null;\n  }\n\n  async createDocumentWithoutName(paths, obj) {\n    console.log(\"createDocumentWithoutName\", paths, obj);\n    var fire_ref = this.getCollection(paths);\n    try {\n      const docRef = await fire_ref.add(obj);\n      console.log(\"Document successfully updated!\", docRef.id);\n      return docRef.id;\n    } catch (err) {\n      console.log(\"Error updating document:\", err);\n    }\n    return null;\n  }\n\n  async createDocument(paths, obj) {\n    // Add a new document in collection\n    console.log(\"createDocument\", paths, obj);\n    var fire_ref = this.getCollection(paths);\n\n    try {\n      await fire_ref.set(obj);\n      console.log(\"Document successfully updated!\");\n    } catch (err) {\n      console.log(\"Error updating document:\", err);\n      return false;\n    }\n    return true;\n  }\n  async delete(paths) {\n    var doc_ref = this.getCollection(paths);\n    try {\n      await doc_ref.delete();\n      console.log(\"ok to remove\");\n    } catch (err) {\n      console.log(\"err to remove\");\n    }\n  }\n  async update(\n    paths,\n    obj,\n    isArray = false,\n    arrayName = \"\",\n    isRemoving = false\n  ) {\n    var doc_ref = this.getCollection(paths);\n    try {\n      if (isArray === true) {\n        const arrElement = {};\n        if (isRemoving === false)\n          arrElement[arrayName] = firebase.firestore.FieldValue.arrayUnion(obj);\n        else\n          arrElement[arrayName] = firebase.firestore.FieldValue.arrayRemove(\n            obj\n          );\n        await doc_ref.update(arrElement);\n      } else await doc_ref.update(obj);\n      console.log(\"Document successfully updated!\");\n    } catch (err) {\n      console.error(\"Error updating document: \", err);\n      return false;\n    }\n    return true;\n  }\n}\n\nexport default new Firebase();\n","import React, { Component } from \"react\";\r\nimport firebase from \"../firebase/firebase\";\r\nimport LoginManager from \"../services/loginManager\";\r\nimport { makesUser, loadingData } from \"../services/ideaService\";\r\n\r\nclass LoginPopup extends Component {\r\n  constructor() {\r\n    super();\r\n    LoginManager.setLoginHandler(this.handleLogin.bind(this));\r\n  }\r\n  async handleLogin(result, user) {\r\n    const gotData = await firebase.loadDocuments([\"users\", user.uid]);\r\n    console.log(\"load user\", gotData);\r\n    if (gotData != null) {\r\n      console.log(\"ok\");\r\n      await loadingData(user);\r\n    } else {\r\n      console.log(\"make user\");\r\n      await makesUser(user);\r\n    }\r\n\r\n    if (result === true) this.props.history.replace(\"/home\");\r\n    else this.props.history.replace(\"/login\");\r\n  }\r\n  render() {\r\n    console.log(\"loginpopup\");\r\n    firebase.popupLogin();\r\n    return <div> login Popup</div>;\r\n  }\r\n}\r\n\r\nexport default LoginPopup;\r\n","import React, { Component } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/home\">\n        BrainStorm\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item active\">\n            <NavLink className=\"nav-link\" to=\"/home/ideas\">\n              Ideas <span className=\"sr-only\">(current)</span>\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/home/materials\">\n              Materials\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\r\n\r\n// Input: linked: boolean\r\n// Output: onClick\r\n// stateless function component\r\nconst Like = (props) => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!props.liked) classes += \"-o\";\r\n\r\n  return (\r\n    <i\r\n      onClick={props.onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n      className={classes}\r\n      aria-hidden=\"true\"\r\n    ></i>\r\n  );\r\n};\r\n/*\r\nclass Like extends Component {\r\n  render() {\r\n    let classes = \"fa fa-heart\";\r\n    if (!this.props.liked) classes += \"-o\";\r\n\r\n    return (\r\n      <i\r\n        onClick={this.props.onClick}\r\n        style={{ cursor: \"pointer\" }}\r\n        className={classes}\r\n        aria-hidden=\"true\"\r\n      ></i>\r\n    );\r\n  }\r\n}\r\n*/\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n//columns: array\r\n//sortColumn: object\r\n//onSort: function\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  /* notice jsx의 경우 <>확장 문법을 사용하는 경우는 return(element)을 하도록 해야함.\r\n        columns.map(column => ( <> ) ) 문법의 경우는 ()가 return ()의 의미임.\r\n        {\r\n            this.props.columns.map((column) => {\r\n            console.log(column);\r\n            return <th>1</th>;\r\n          })}\r\n\r\n  */\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => {\r\n            if (column.path !== undefined) {\r\n              return (\r\n                <th\r\n                  className=\"clickable\"\r\n                  key={column.path}\r\n                  onClick={() => this.raiseSort(column.path)}\r\n                >\r\n                  {column.label} {this.renderSortIcon(column)}\r\n                </th>\r\n              );\r\n            }\r\n            return <th key={column.key}></th>;\r\n          })}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    console.log(\"table body\", data, columns);\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { Component } from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\nconst Table = (props) => {\r\n  const { columns, sortColumn, onSort, data } = props;\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody data={data} columns={columns} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\n\r\nclass IdeasTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (idea) => (\r\n        <Link to={`/home/ideas/${idea._id}`}>{idea.title}</Link>\r\n      ),\r\n    },\r\n    { path: \"category\", label: \"Category\" },\r\n    // { path: \"time\", label: \"Time\" },\r\n    {\r\n      key: \"1\",\r\n      content: (idea) => (\r\n        <Like liked={idea.liked} onClick={() => this.props.onLike(idea)} />\r\n      ),\r\n    },\r\n    {\r\n      key: \"2\",\r\n      content: (idea) => (\r\n        <button\r\n          onClick={() => this.props.onDelete(idea)}\r\n          className=\"btn btn-danger btn-sm\"\r\n        >\r\n          Delete\r\n        </button>\r\n      ),\r\n    },\r\n  ];\r\n  render() {\r\n    const { ideas, sortColumn, onSort } = this.props;\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={ideas}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default IdeasTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = (props) => {\r\n  //[1,2,3]\r\n  const { itemsCount, pageSize, onPageChange, currentPage } = props;\r\n  //ceil: float point보다 큰 integer return. ex: 0.5 => 1\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1); // use the lodash(make array)\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a\r\n              className=\"page-link\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => onPageChange(page)}\r\n            >\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\n// role of prototype and api / debug code\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\n\r\nconst ListGroup = (props) => {\r\n  const {\r\n    items,\r\n    textProperty,\r\n    valueProperty,\r\n    onItemSelect,\r\n    selectedItem,\r\n  } = props;\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          onClick={() => onItemSelect(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\",\r\n};\r\n\r\nexport default ListGroup;\r\n","import React, { Component } from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { getIdeas, getCategories, removeIdea } from \"../services/ideaService\";\r\nimport IdeasTable from \"./ideasTable\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"./common/pagination\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\nclass Ideas extends Component {\r\n  state = {\r\n    ideas: [],\r\n    category: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    searchQuery: \"\",\r\n    selectedCategory: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  componentDidMount() {\r\n    const ideas = getIdeas();\r\n    if (ideas === null) {\r\n      ///TODO\r\n    }\r\n    const categories_from_idea = getCategories(ideas);\r\n    const category = [\r\n      { _id: \"\", name: \"All Category\" },\r\n      ...categories_from_idea,\r\n    ];\r\n    this.setState({ ideas: ideas, category });\r\n  }\r\n\r\n  handleDelete = (idea) => {\r\n    const ideas = this.state.ideas.filter((m) => m._id !== idea._id);\r\n    this.setState({ ideas: ideas }); //this.setState({ movies });\r\n    removeIdea(idea);\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleLike = (idea) => {\r\n    const ideas = [...this.state.ideas];\r\n    const index = ideas.indexOf(idea);\r\n    ideas[index] = { ...ideas[index] };\r\n    ideas[index].liked = !ideas[index].liked;\r\n    this.setState({ ideas });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleCatgorySelect = (category) => {\r\n    this.setState({\r\n      selectedCategory: category,\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n    });\r\n    //searchQuery shouldn't be null\r\n    //because searchQuery is the value for control component for input\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      selectedCategory: null,\r\n      currentPage: 1,\r\n    });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      selectedCategory,\r\n      searchQuery,\r\n      ideas: all_ideas,\r\n      sortColumn,\r\n    } = this.state;\r\n\r\n    let filtered = all_ideas;\r\n    if (searchQuery)\r\n      filtered = all_ideas.filter((m) =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedCategory && selectedCategory._id)\r\n      filtered = all_ideas.filter((m) => m.category === selectedCategory.name);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n    const ideas = paginate(sorted, currentPage, pageSize);\r\n    return { totalCount: filtered.length, data: ideas };\r\n  };\r\n  render() {\r\n    const { length: count } = this.state.ideas; //ideas length를 count로 받음.\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n    //  if (count === 0) return <p> There are no ideas in the databases</p>;\r\n    let category_filter = [];\r\n    category_filter = this.state.category.filter((c) => {\r\n      if (category_filter.includes(c.name) === true) return false;\r\n      category_filter.push(c.name);\r\n      return true;\r\n    });\r\n\r\n    const { totalCount, data: ideas } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={category_filter}\r\n            selectedItem={this.state.selectedCategory}\r\n            onItemSelect={this.handleCatgorySelect}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <Link\r\n            to=\"/home/ideas/new\"\r\n            className=\"btn btn-primary\"\r\n            style={{ marginBottom: 20 }}\r\n          >\r\n            New idea\r\n          </Link>\r\n          <p> Showing {totalCount} ideas in the database.</p>\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <IdeasTable\r\n            ideas={ideas}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ideas;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\n\r\nclass MaterialsTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"keyword\",\r\n      label: \"keyword\",\r\n      content: (material) => (\r\n        <Link to={`/home/materials/${material._id}`}>{material.keyword}</Link>\r\n      ),\r\n    },\r\n    { path: \"category\", label: \"Category\" },\r\n    // { path: \"time\", label: \"Time\" },\r\n    {\r\n      key: \"1\",\r\n      content: (material) => (\r\n        <Like\r\n          liked={material.liked}\r\n          onClick={() => this.props.onLike(material)}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      key: \"2\",\r\n      content: (material) => (\r\n        <button\r\n          onClick={() => this.props.onDelete(material)}\r\n          className=\"btn btn-danger btn-sm\"\r\n        >\r\n          Delete\r\n        </button>\r\n      ),\r\n    },\r\n  ];\r\n  render() {\r\n    const { materials, sortColumn, onSort } = this.props;\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={materials}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MaterialsTable;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  getMaterials,\r\n  getCategories,\r\n  removeMaterial,\r\n} from \"../services/ideaService\";\r\nimport MaterialsTable from \"./materialsTable\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"./common/pagination\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\nclass Materials extends Component {\r\n  state = {\r\n    materials: [],\r\n    category: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    searchQuery: \"\",\r\n    selectedCategory: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  componentDidMount() {\r\n    const materials = getMaterials();\r\n    if (materials === null) {\r\n      ///TODO\r\n    }\r\n    const categories_from_material = getCategories(materials);\r\n    const category = [\r\n      { _id: \"\", name: \"All Category\" },\r\n      ...categories_from_material,\r\n    ];\r\n    this.setState({ materials: materials, category });\r\n  }\r\n\r\n  handleDelete = (material) => {\r\n    if (\r\n      material.ideas !== null &&\r\n      material.ideas !== undefined &&\r\n      material.ideas.length > 0\r\n    ) {\r\n      console.log(\"not avaliable delete\", material);\r\n      alert(\"not avaliable delete because there are related ideas\");\r\n      return;\r\n    }\r\n\r\n    const materials = this.state.materials.filter(\r\n      (m) => m._id !== material._id\r\n    );\r\n    this.setState({ materials: materials }); //this.setState({ movies });\r\n    removeMaterial(material);\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleLike = (material) => {\r\n    const materials = [...this.state.materials];\r\n    const index = materials.indexOf(material);\r\n    materials[index] = { ...materials[index] };\r\n    materials[index].liked = !materials[index].liked;\r\n    this.setState({ materials });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleCatgorySelect = (category) => {\r\n    console.log(\"material_select\", category);\r\n    this.setState({\r\n      selectedCategory: category,\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n    });\r\n    //searchQuery shouldn't be null\r\n    //because searchQuery is the value for control component for input\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      selectedCategory: null,\r\n      currentPage: 1,\r\n    });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      selectedCategory,\r\n      searchQuery,\r\n      materials: all_materials,\r\n      sortColumn,\r\n    } = this.state;\r\n\r\n    console.log(\"material_select filter\", selectedCategory);\r\n    let filtered = all_materials;\r\n    if (searchQuery)\r\n      filtered = all_materials.filter((m) =>\r\n        m.keyword.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedCategory && selectedCategory._id) {\r\n      filtered = all_materials.filter(\r\n        (m) => m.category === selectedCategory.name\r\n      );\r\n      console.log(\"after filter\", filtered);\r\n    }\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n    const ideas = paginate(sorted, currentPage, pageSize);\r\n    return { totalCount: filtered.length, data: ideas };\r\n  };\r\n  render() {\r\n    const { length: count } = this.state.materials; //ideas length를 count로 받음.\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n    //if (count === 0) return <p> There are no ideas in the databases</p>;\r\n    let category_filter = [];\r\n    category_filter = this.state.category.filter((c) => {\r\n      if (category_filter.includes(c.name) === true) return false;\r\n      category_filter.push(c.name);\r\n      return true;\r\n    });\r\n    const { totalCount, data: materials } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={category_filter}\r\n            selectedItem={this.state.selectedCategory}\r\n            onItemSelect={this.handleCatgorySelect}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <Link\r\n            to=\"/home/materials/new\"\r\n            className=\"btn btn-primary\"\r\n            style={{ marginBottom: 20 }}\r\n          >\r\n            New Materials\r\n          </Link>\r\n          <p> Showing {totalCount} materials in the database.</p>\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <MaterialsTable\r\n            materials={materials}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Materials;\r\n","import React, { Component } from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        //초기값.(value)\n        {...rest}\n        id={name}\n        name={name}\n        className=\"form-control\"\n      />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n  state = { data: {}, errors: {} };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = (e) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(e.currentTarget);\n    if (errorMessage) errors[e.currentTarget.name] = errorMessage;\n    else delete errors[e.currentTarget.name];\n\n    const data = { ...this.state.data };\n    data[e.currentTarget.name] = e.currentTarget.value;\n    this.setState({ data, errors });\n  };\n\n  renderTextArea(name, label, row = 1, type = \"text\") {\n    const { data, errors } = this.state;\n    return (\n      <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <textarea\n          className=\"form-control\"\n          rows={row}\n          type={type}\n          name={name}\n          value={data[name]}\n          label={label}\n          onChange={this.handleChange}\n          error={errors[name]}\n        ></textarea>\n      </div>\n    );\n  }\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data, errors } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\r\nimport \"./css/tags.css\";\r\n\r\nclass Tags extends Component {\r\n  render() {\r\n    const { tags, onClose } = this.props;\r\n    console.log(tags);\r\n    return (\r\n      <div className=\"tags-input\" data-name=\"tags-input\">\r\n        {tags.map((tag, index) => {\r\n          return (\r\n            <span className=\"tag\" key={index}>\r\n              {tag}\r\n              <span className=\"close\" onClick={() => onClose(tag)}></span>\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tags;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\n\r\nimport Tags from \"./common/hashTags\";\r\nimport {\r\n  getMaterials,\r\n  addNewIdeaWithMaterials,\r\n  updateIdeaWithMaterials,\r\n  getIdea,\r\n} from \"../services/ideaService\";\r\n\r\nclass IdeaForm extends Form {\r\n  state = {\r\n    data: { title: \"\", category: \"\", content: \"\" },\r\n    materials: [],\r\n    pickedMaterials: [],\r\n    errors: {},\r\n  };\r\n  schema = {\r\n    // material 하나라도 pick되어야함.\r\n\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    category: Joi.string().required().label(\"Category\"),\r\n    content: Joi.string().required().label(\"Content\"),\r\n  };\r\n\r\n  handleMaterialTagClick = (tag) => {\r\n    const materials = getMaterials();\r\n    const material = materials.find((m) => {\r\n      return m.keyword === tag;\r\n    });\r\n\r\n    const filtered_tags = this.state.pickedMaterials.filter(\r\n      (t) => t.keyword !== tag\r\n    );\r\n    this.state.materials.push(material);\r\n    this.setState({ pickedMaterials: filtered_tags });\r\n  };\r\n\r\n  getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min; //최댓값은 제외, 최솟값은 포함\r\n  }\r\n\r\n  //TODO( pick btn click)\r\n  handlePickmaterial = () => {\r\n    //show materials(setstate)\r\n    const { materials } = this.state;\r\n    if (materials.length === 0) {\r\n      console.log(\"no material\");\r\n      alert(\"there are no more material to pick up\");\r\n      return; ///더 뽑을 material 없음.\r\n    }\r\n    const pickedMaterials = [...this.state.pickedMaterials];\r\n\r\n    const material_index = this.getRandomInt(0, materials.length);\r\n    const material = { ...materials[material_index] };\r\n    pickedMaterials.push(material);\r\n\r\n    const new_materials = materials.filter(\r\n      (m, index) => index !== material_index\r\n    );\r\n    this.setState({ pickedMaterials, materials: new_materials });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let materials = getMaterials();\r\n\r\n    const ideaid = this.props.match.params.id;\r\n    this.ideaid = ideaid;\r\n    if (ideaid === \"new\") {\r\n      this.setState({ materials });\r\n      return;\r\n    }\r\n\r\n    const idea = getIdea(ideaid);\r\n    if (!idea) return this.props.history.replace(\"/not-found\");\r\n    console.log(\"pickup1\", idea.materials);\r\n    console.log(\"materials\", materials);\r\n    this.state.pickedMaterials = materials.filter((m) => {\r\n      for (var index in idea.materials) {\r\n        if (m._id === idea.materials[index].material_id) return true;\r\n      }\r\n      return false;\r\n    });\r\n    materials = materials.filter((m) => {\r\n      for (var index in this.state.pickedMaterials) {\r\n        if (m._id === this.state.pickedMaterials[index]._id) return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    this.setState({ materials });\r\n    console.log(\"pickup\", this.state.pickedMaterials);\r\n    this.setState({ data: this.mapToViewModel(idea) });\r\n  }\r\n\r\n  mapToViewModel(idea) {\r\n    return {\r\n      _id: idea._id,\r\n      title: idea.title,\r\n      category: idea.category,\r\n      content: idea.content,\r\n    };\r\n  }\r\n\r\n  async doSubmit() {\r\n    const { pickedMaterials } = this.state;\r\n    let idea = this.state.data;\r\n    idea.materials = [];\r\n\r\n    pickedMaterials.map((m) => {\r\n      idea.materials.push({ material_id: m._id });\r\n    });\r\n    if (this.ideaid === \"new\")\r\n      await addNewIdeaWithMaterials(idea, pickedMaterials);\r\n    else await updateIdeaWithMaterials(idea);\r\n    this.props.history.push(\"/home/ideas/\");\r\n  }\r\n\r\n  render() {\r\n    const { pickedMaterials } = this.state;\r\n    const material_tags = pickedMaterials.map((m) => {\r\n      return m.keyword; // {} 사용시 return을 명시해야함. () 인경우 return을 내포함.\r\n    });\r\n    return (\r\n      <div>\r\n        <h1>Idea Form</h1>\r\n        <div align=\"right\">\r\n          <button className=\"btn btn-primary\" onClick={this.handlePickmaterial}>\r\n            pick materials\r\n          </button>\r\n          <Tags\r\n            tags={material_tags}\r\n            onClose={this.handleMaterialTagClick}\r\n          ></Tags>\r\n        </div>\r\n\r\n        <form onSubmit={this.handleSubmit.bind(this)}>\r\n          {this.renderInput(\"title\", \"Title\", 5)}\r\n          {\r\n            //this.renderSelect(\"genreId\", \"Genre\", this.state.genres)\r\n          }\r\n          {this.renderInput(\"category\", \"Category\")}\r\n          {this.renderTextArea(\"content\", \"Content\", 5)}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IdeaForm;\r\n/*\r\nconst MovieForm = ({ match, history }) => {\r\n  return (\r\n    <div>\r\n      <h1>Movie Form {match.params.id}</h1>;\r\n      <button\r\n        className=\"btn btn-primary\"\r\n        onClick={() => history.push(\"/movies\")}\r\n      >\r\n        Save\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieForm;\r\n*/\r\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getIdeas,\n  getMaterial,\n  updateMaterial,\n  addNewMaterial,\n  getMaterials,\n} from \"../services/ideaService\";\n\nclass MaterialForm extends Form {\n  state = {\n    data: { keyword: \"\", category: \"\" },\n    ideas: [],\n    errors: {},\n  };\n  schema = {\n    _id: Joi.string(),\n    keyword: Joi.string().required().label(\"Keyword\"),\n    category: Joi.string().required().label(\"Category\"),\n  };\n\n  componentDidMount() {\n    const ideas = getIdeas();\n    const materialId = this.props.match.params.id;\n    this.materialId = materialId;\n    if (materialId === \"new\") return;\n\n    const material = getMaterial(materialId);\n    if (!material) return this.props.history.replace(\"/not-found\");\n    this.state.ideas = [\n      ...ideas.filter((i) => {\n        for (var index in i.materials) {\n          if (material._id === i.materials[index].material_id) return true;\n        }\n        return false;\n      }),\n    ];\n    this.setState({ data: this.mapToViewModel(material) });\n  }\n\n  mapToViewModel(material) {\n    return {\n      _id: material._id,\n      keyword: material.keyword,\n      category: material.category,\n    };\n  }\n\n  async doSubmit() {\n    let material = this.state.data;\n    let materials = getMaterials();\n    materials = materials.filter((m) => m.keyword === material.keyword);\n    if (materials.length > 0) {\n      console.log(\"can't add same keword\");\n      alert(\"can't add same keword\");\n      return;\n    }\n\n    if (this.materialId === \"new\") await addNewMaterial(material);\n    else await updateMaterial(material);\n    this.props.history.push(\"/home/materials/\");\n  }\n\n  render() {\n    const { ideas } = this.state;\n    return (\n      <div>\n        <h1>Material Form</h1>\n        <div align=\"right\">\n          <div>related ideas</div>\n          {ideas.map((i, index) => {\n            return (\n              <Link key={index} to={`/home/ideas/${i._id}`}>\n                {i.title}\n              </Link>\n            );\n          })}\n        </div>\n        <form onSubmit={this.handleSubmit.bind(this)}>\n          {this.renderInput(\"keyword\", \"Keyword\")}\n          {\n            //this.renderSelect(\"genreId\", \"Genre\", this.state.genres)\n          }\n          {this.renderInput(\"category\", \"Category\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MaterialForm;\n/*\nconst MovieForm = ({ match, history }) => {\n  return (\n    <div>\n      <h1>Movie Form {match.params.id}</h1>;\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => history.push(\"/movies\")}\n      >\n        Save\n      </button>\n    </div>\n  );\n};\n\nexport default MovieForm;\n*/\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./navBar\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Ideas from \"./ideas\";\r\nimport Materials from \"./materials\";\r\nimport IdeaForm from \"./ideaForm\";\r\nimport MaterialForm from \"./materialForm\";\r\nimport LoginManager from \"../services/loginManager\";\r\n\r\nconst Home = () => {\r\n  const isLogin = LoginManager.isLogin();\r\n  console.log(\"islogin\", isLogin);\r\n  return (\r\n    <React.Fragment>\r\n      <NavBar />\r\n      <main className=\"container\">\r\n        <Switch>\r\n          {isLogin === true && (\r\n            <Route path=\"/home/ideas/:id\" component={IdeaForm}></Route>\r\n          )}\r\n          {isLogin === true && (\r\n            <Route path=\"/home/materials/:id\" component={MaterialForm}></Route>\r\n          )}\r\n\r\n          {isLogin === true && <Route path=\"/home/ideas\" component={Ideas} />}\r\n          {isLogin === true && (\r\n            <Route path=\"/home/materials\" component={Materials} />\r\n          )}\r\n        </Switch>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport LoginManager from \"./services/loginManager\";\nimport LoginPopup from \"./components/loginPopup\";\nimport Home from \"./components/home\";\n\nclass App extends Component {\n  render() {\n    const isLogin = LoginManager.isLogin();\n    console.log(\"isLogin\", isLogin);\n    return (\n      <React.Fragment>\n        {isLogin === false && <Redirect to=\"/login\"></Redirect>}\n\n        <div>\n          <Switch>\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/login\" component={LoginPopup} />\n            {isLogin === true && (\n              <Redirect from=\"/\" exact to=\"/home\"></Redirect>\n            )}\n          </Switch>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"jquery/src/jquery\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}